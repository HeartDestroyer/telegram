# src/handlers/start.py

import os
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart, CommandObject
from loguru import logger
from aiogram import types
from aiomysql import OperationalError
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, FSInputFile
from aiogram.fsm.context import FSMContext

from src.db import get_pool
from src.main import bot
from src.handlers.portal import PortalState

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def cmd_start(message: Message, command: CommandObject, state: FSMContext):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    logger.info(f"command.args: {command.args}")

    args_text = command.args or ""
    args_list = args_text.split()
    utm = args_list[0] if args_list else 'tg_bot'

    user_id = message.from_user.id
    full_name = message.from_user.full_name
    username = message.from_user.username

    await save_user_to_db(full_name, user_id, username, utm)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª /start portal
    if args_list and args_list[0] == "portal":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –Ω–∞ HR-–ø–æ—Ä—Ç–∞–ª–µ:")
        await state.set_state(PortalState.waiting_for_login)
        return
    
    welcome_text = (
        f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}\n'
        '–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ.\n\n'
        '–ú—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—É–±–ª–∏–∫—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –≥–æ—Å–∑–∞–∫–∞–∑—á–∏–∫–æ–≤, –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–π –∏ –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –ø–æ –≤–∞—à–µ–π –Ω–∏—à–µ —É —Å–µ–±—è –≤ –ø–∞–ø–∫–µ –¢–µ–ª–µ–≥—Ä–∞–º:\n\n'
        'üî∏ –£–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è ‚ÜïÔ∏è\n'
        'üî∏ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ñ–µ—Ä–∞–º –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ä–µ–≥–∏–æ–Ω–∞–º –†–æ—Å—Å–∏–∏\n'
        'üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Ç–æ–≤ –∑–∞ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤ üí¨\n\n'
        '–ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –Ω–∏—à–µ.\n\n'
        '‚ûï–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å!\n\n'
        '–ó–∞–±–∏—Ä–∞–π—Ç–µ –ª—É—á—à–∏–µ —Ç–µ–Ω–¥–µ—Ä—ã –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –±–æ–ª—å—à–µ!\n'
        'https://t.me/addlist/Y4BKGeudpldlMTQy'
    )

    video_path = os.path.join(os.path.dirname(__file__), "video", "hi.mp4")
    try:
        video_input = FSInputFile(path=video_path)
        await bot.send_video(
            message.chat.id,
            video=video_input,
            caption=welcome_text,
            reply_markup=main_menu()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
        # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        await message.answer(welcome_text, reply_markup=main_menu())

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
async def save_user_to_db(full_name, user_id, username, utm):
    sql = '''
        INSERT INTO telegram_bot (full_name, id_user, username, url, utm)
        VALUES (%s, %s, %s, %s, %s)
        ON DUPLICATE KEY UPDATE
            full_name = VALUES(full_name),
            username = VALUES(username)
    '''
    pool = await get_pool()
    async with pool.acquire() as conn:
        async with conn.cursor() as cur:
            try:
                await cur.execute(sql, (full_name, user_id, username or "", None, utm))
            except OperationalError as ex:
                logger.error(f"–û—à–∏–±–∫–∞ –ë–î –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {ex}")
            except Exception as ex:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {ex}")

# –°–æ–∑–¥–∞—ë–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text="–°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏",
            url="https://expertcentre.org?utm_source=tg_bot"
        )
    )
    builder.add(
        InlineKeyboardButton(
            text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã",
            url="https://t.me/addlist/Y4BKGeudpldlMTQy"
        )
    )
    builder.adjust(1)
    return builder.as_markup()
